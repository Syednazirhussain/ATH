@model ATH.ViewModel.LoginViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>ATH 2 | Log in</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    @Styles.Render("~/Content/adminlte/bower_components/bootstrap/dist/css/bootstrap.css")
    @Styles.Render("~/Content/adminlte/bower_components/font-awesome/css/font-awesome.css")
    @Styles.Render("~/Content/adminlte/bower_components/Ionicons/css/ionicons.css")
    @Styles.Render("~/Content/adminlte/dist/css/AdminLTE.min.css")
    @Styles.Render("~/Content/adminlte/plugins/iCheck/square/blue.css")

</head>
<body class="hold-transition login-page">
    <div class="login-box">
        <div class="login-logo">
            <a href="javascript:void(0);"><b>Admin</b>&nbsp;ATH</a>
        </div>
        <div class="login-box-body">

            @using (Html.BeginForm("Login", "Login", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                if(TempData["Message"] != null)
                {
                    <div class="alert alert-danger">
                        <span>@TempData["Message"]</span>
                    </div>
                }


                @Html.ValidationSummary(true, "Error(s)", new { @class = "text-danger" })

                <div class="form-group has-feedback">
                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email" })
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder = "Password" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <div class="col-xs-8">
                        <div class="checkbox icheck">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Sign In</button>
                    </div>
                </div>
            }
        </div>
    </div>

    @Scripts.Render("~/Content/adminlte/bower_components/jquery/dist/jquery.js")
    @Scripts.Render("~/Content/adminlte/bower_components/bootstrap/dist/js/bootstrap.js")
    @Scripts.Render("~/Content/adminlte/plugins/iCheck/icheck.min.js")

</body>
</html>
